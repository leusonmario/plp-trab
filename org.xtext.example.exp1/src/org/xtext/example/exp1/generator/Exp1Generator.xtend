/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.exp1.generator

import com.google.inject.Inject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.naming.IQualifiedNameProvider
import org.xtext.example.exp1.exp1.DecVariavel

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class Exp1Generator implements IGenerator {
	@Inject extension IQualifiedNameProvider

	override doGenerate(Resource input, IFileSystemAccess fsa) {
		for (e : input.allContents.toIterable.filter(DecVariavel)) {
			fsa.generateFile(e.fullyQualifiedName.toString("/") + ".java", e.compile)
		}
	}

	def compile(DecVariavel variavel) '''
		package «variavel.eContainer.fullyQualifiedName»;
		    
		public class «variavel.name» {
			private int «variavel.value»
								
			public int getValue() {
			     return «variavel.value»;
			}
								        
			public void setValue(int «variavel.value») {
			     this.«variavel.value» = «variavel.value»;
			}
		}
	'''
}
