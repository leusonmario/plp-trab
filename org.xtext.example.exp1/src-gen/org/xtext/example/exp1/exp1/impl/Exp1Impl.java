/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.exp1.exp1.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.exp1.exp1.Exp1;
import org.xtext.example.exp1.exp1.Exp1Package;
import org.xtext.example.exp1.exp1.Expressao;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Exp1</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.exp1.exp1.impl.Exp1Impl#getExpressoes <em>Expressoes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Exp1Impl extends MinimalEObjectImpl.Container implements Exp1
{
  /**
   * The cached value of the '{@link #getExpressoes() <em>Expressoes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressoes()
   * @generated
   * @ordered
   */
  protected EList<Expressao> expressoes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Exp1Impl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Exp1Package.Literals.EXP1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expressao> getExpressoes()
  {
    if (expressoes == null)
    {
      expressoes = new EObjectContainmentEList<Expressao>(Expressao.class, this, Exp1Package.EXP1__EXPRESSOES);
    }
    return expressoes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Exp1Package.EXP1__EXPRESSOES:
        return ((InternalEList<?>)getExpressoes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Exp1Package.EXP1__EXPRESSOES:
        return getExpressoes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Exp1Package.EXP1__EXPRESSOES:
        getExpressoes().clear();
        getExpressoes().addAll((Collection<? extends Expressao>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Exp1Package.EXP1__EXPRESSOES:
        getExpressoes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Exp1Package.EXP1__EXPRESSOES:
        return expressoes != null && !expressoes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //Exp1Impl
