/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.exp1.tests

import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.eclipse.xtext.junit4.validation.ValidationTestHelper
import org.junit.Test
import static org.junit.Assert.*;
import org.junit.runner.RunWith
import org.xtext.example.exp1.exp1.DecVariavel
import org.xtext.example.exp1.exp1.Exp1

@RunWith(XtextRunner)
@InjectWith(Exp1InjectorProvider)
class Exp1ParsingTest {

	@Inject
	ParseHelper<Exp1> parseHelper;
	
	@Inject
	extension ValidationTestHelper validationTestHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse(
			'''
			var teste = 10
			'''
		)
		val variavel = result.expressoes.head as DecVariavel
		 assertSame(variavel, result.expressoes.head)
	}

	@Test
	def void testaExpressaoSub() {
		val model = parseHelper.parse('''
			var teste=10
			var teste2 = 5
			teste + teste2
		''')
		validationTestHelper.assertNoErrors(model)
	}
}
